------------------------------------------------------------------
--   KL PROGRAM:   IPL_FANUC_SWELD_PR

--   SYNOPSIS:     This is called in the TP generated by IPL_FANUC_SWELD_PR.
--                 Used for updating segements in the TP.
--
--   PARAMETERS:   None
--
--
--
--   AUTHOR:       JDM    

--   DATE:         2022.06.18

--   COMPANY:      FANUC

------------------------------------------------------------------
PROGRAM IPL_FANUC_SWELD_PR
------------------------------------------------------------------
%COMMENT = 'Sweld KL'
%ALPHABETIZE
--%NOABORT = ERROR + COMMAND + TPENABLE
%NOLOCKGROUP                         --Specifies no motion is locked
--%UNINITVARS                          --Specifies that all vars are uninit by default
%NOPAUSE = ERROR + COMMAND + TPENABLE  --Specifies Mask for Pausing
                                           --ERROR: ignore pause severity
                                           --COMMAND: ignore pause command
                                           --TPENABLE: ignore paused req w/TP enabled
--%DELAY                               --Time to delay program
%INCLUDE KLEVKEYS                      --Key code defininition file
%INCLUDE KLEVKMSK                      --Mask values used for form manager term_masks
%INCLUDE KLEVCCDF                      --Character code constants 
%INCLUDE KLIOUOP                       --Constants used for UOP I/O
%INCLUDE KLIOTYPS                      --Constants defining I/O types
------------------------------------------------------------------
  
VAR
  seg_start        IN CMOS FROM IPL_FANUC_SWELD_SET   : ARRAY[32] OF XYZWPR
  seg_end          IN CMOS FROM IPL_FANUC_SWELD_SET   : ARRAY[32] OF XYZWPR
  sgstart          IN CMOS FROM IPL_FANUC_SWELD_SET   : XYZWPR
  sgend            IN CMOS FROM IPL_FANUC_SWELD_SET   : XYZWPR
  count            IN CMOS FROM IPL_FANUC_SWELD_SET   : INTEGER
  rprm             :REAL
  strprm           :STRING[8]
  status           :INTEGER
 
-- ROUTINE RealToString(r : REAL) : STRING FROM IPL_FANUC_SWELD_SET
-- ROUTINE IntToString(i: INTEGER) : STRING FROM IPL_FANUC_SWELD_SET
-- ROUTINE IntCompareNotEq_TpError(i1, i2 : INTEGER; sMsg : string) FROM IPL_FANUC_SWELD_SET--compare two ints; write tp and abort if different
-- ROUTINE IntCompareGT_TpError(i1, i2 : INTEGER; sMsg : string) FROM IPL_FANUC_SWELD_SET --compare two ints; write tp and abort if i1 > i2
-- ROUTINE IntCompareLT_TpError(i1, i2 : INTEGER; sMsg : string) FROM IPL_FANUC_SWELD_SET --compare two ints; write tp and abort if i1 < i2
-- ROUTINE RealCompareGT_TpError(r1, r2 : REAL; sMsg : string) FROM IPL_FANUC_SWELD_SET --compare two ints; write tp and abort if r1 > r2
-- ROUTINE RealCompareLT_TpError(r1, r2 : REAL; sMsg : string) FROM IPL_FANUC_SWELD_SET --compare two ints; write tp and abort if r1 < r2
-- ROUTINE GetParamInt(piIndex, piMin, piMax : INTEGER) : INTEGER FROM IPL_FANUC_SWELD_SET
-- ROUTINE GetParamReal(argIdx: INTEGER; rMin, rMax : REAL) : REAL FROM IPL_FANUC_SWELD_SET
-- ROUTINE GetParamStr(piIndex, piMinLen, piMaxLen : INTEGER) : STRING FROM IPL_FANUC_SWELD_SET
-- ROUTINE CnvIntBool(int : INTEGER)  : BOOLEAN FROM IPL_FANUC_SWELD_SET--convert integer to boolean

------------------------------------------------------------------  
-- ROUTINE GetTpParams --get tp parameters and assign to Globals
-- ------------------------------------------------------------------  
-- VAR
-- 	idx:			  INTEGER
-- 	iDataType:	INTEGER
-- 	iVal : 		  INTEGER
-- 	rVal : 		  REAL
-- 	sVal : 		  STRING[254]
-- 	sDebug : 	  STRING[64]

-- BEGIN
--   -- s_pr        = GetParamInt(1, I_MIN, I_MAX)
-- 	-- e_pr	      = GetParamInt(2, I_MIN, I_MAX)
--  	count	      = GetParamInt(1, I_MIN, I_MAX)

-- END GetTpParams

------------------------------------------------------------------
--                              MAIN                              
------------------------------------------------------------------
BEGIN

    GET_TPE_PRM(1, 1, count, rprm, strprm, status)  

    sgstart = seg_start[count] 
    sgend = seg_end[count] 

END  IPL_FANUC_SWELD_PR
